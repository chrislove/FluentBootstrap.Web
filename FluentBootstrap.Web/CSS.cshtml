@using FluentBootstrap

@{
    Page.Title = "CSS";
    Layout = "_Layout.cshtml";
}

<style>
    .demo-grid {
        margin-bottom: 6px;
    }

    .demo-grid > div[class^="col-"] {
        background-color: #999;
        border-radius: 6px;
        border: 1px white solid;
        color: white;
    }
</style>

@using (var outerRow = Html.Bootstrap(this).GridRow().Begin())
{
    using (outerRow.GridColumn(9).SetSm(12).Begin())
    {
        <p>This section deals with functionality related to existing standard HTML elements but with additional styling and capabilities. FluentBootstrap implements all CSS functionality from Bootstrap. For a full list of Bootstrap capabilities, @Html.Bootstrap(this).Link("see the Bootstrap documentation", "http://getbootstrap.com/css/").</p>

        @**********************************@

        @Html.Bootstrap(this).PageHeader("Grids").SetId("grids")
    
        @Html.Bootstrap(this).Heading2("Containers")
        
        <p>Create a page container using <code>.Container()</code>. To make the container fluid, use <code>.SetFluid()</code>.</p>
        @Html.Code(@"@using(var container = Html.Bootstrap().Container().SetFluid().Begin())
            {
                ...
            }")

        @Html.Bootstrap(this).Heading2("Grids")
    
        <p>Create a grid using <code>.GridRow()</code>, then use <code>.GridColumn()</code> to create the columns. The <code>.GridColumn()</code> method can optionally take an <code>Md</code> width of the column (for more sophisticated grid layouts see the next section). You can add content to the grid columns by using them as a disposable and putting content inside, or by using the <code>.AddContent()</code> method. As with all FluentBootstrap components, you can also use HTML directly and rely on the <code>Css</code> static class to provide the appropriate CSS class names. Each of these options is demonstrated below.</p>
    
        using(var panel = Html.Bootstrap(this).Panel().Begin())
        {
            using(panel.PanelBody().Begin())
            {
                <text>
                    @using (var row = Html.Bootstrap(this).GridRow().AddCss("demo-grid").Begin())
                    {
                        for (int c = 0; c < 12; c++)
                        {
                            @row.GridColumn(1).AddContent("Md 1")
                        }
                    }
                    @using (var row = Html.Bootstrap(this).GridRow().AddCss("demo-grid").Begin())
                    {
                        using (row.GridColumn(8).Begin())
                        {
                            <text>Md 8</text>
                        }
                        using (row.GridColumn(4).Begin())
                        {
                            <text>Md 4</text>
                        }
                    }
                    @using (var row = Html.Bootstrap(this).GridRow().AddCss("demo-grid").Begin())
                    {
                        @row.GridColumn(4).AddContent("Md 4")
                        @row.GridColumn(4).AddContent("Md 4")
                        @row.GridColumn(4).AddContent("Md 4")
                    }
                    @using (var row = Html.Bootstrap(this).GridRow().AddCss("demo-grid").Begin())
                    {
                        <div class="@Css.ColMd6">Md 6</div>
                        <div class="@Css.ColMd6">Md 6</div>
                    }
                </text>
            }
            using(panel.PanelTable().Begin())
            {
                @Html.Code(@"@using (var row = Html.Bootstrap().GridRow().Begin())
                    {
                        for (int c = 0; c < 12; c++)
                        {
                            @row.GridColumn(1).AddContent(""Md 1"")
                        }
                    }
                    @using (var row = Html.Bootstrap().GridRow().Begin())
                    {
                        using (row.GridColumn(8).Begin())
                        {
                            <text>Md 8</text>
                        }
                        using (row.GridColumn(4).Begin())
                        {
                            <text>Md 4</text>
                        }
                    }
                    @using (var row = Html.Bootstrap().GridRow().Begin())
                    {
                        @row.GridColumn(4).AddContent(""Md 4"")
                        @row.GridColumn(4).AddContent(""Md 4"")
                        @row.GridColumn(4).AddContent(""Md 4"")
                    }
                    @using (var row = Html.Bootstrap().GridRow().Begin())
                    {
                        <div class=""@Css.ColMd6"">Md 6</div>
                        <div class=""@Css.ColMd6"">Md 6</div>
                    }")
            }
        }

        @Html.Bootstrap(this).Heading2("Column Widths")
    
        <p>For simple grids, just pass the number of columns to the <code>.GridColumn()</code> method. This will result in corresponding <code>.col-md-</code> CSS classes to be generated. For more complex grid layouts, you can use the <code>.SetXs()</code>, <code>.SetSm()</code>, <code>.SetMd()</code>, and <code>.SetLg()</code> methods. You can use more than one of these at a time to create sophisticated column schemes that change with the window size.</p>
    
        using (var panel = Html.Bootstrap(this).Panel().Begin())
        {
            using (panel.PanelBody().Begin())
            {
                <text>
                    @using (var row = Html.Bootstrap(this).GridRow().AddCss("demo-grid").Begin())
                    {
                        @row.GridColumn(8).SetXs(12).AddContent("Md8 Xs12")
                        @row.GridColumn(4).SetXs(6).AddContent("Md4 Xs6")
                    }
                    @using (var row = Html.Bootstrap(this).GridRow().AddCss("demo-grid").Begin())
                    {
                        @row.GridColumn().SetMd(4).SetXs(6).AddContent("Md4 Xs6")
                        @row.GridColumn().SetMd(4).SetXs(6).AddContent("Md4 Xs6")
                        @row.GridColumn().SetMd(4).SetXs(6).AddContent("Md4 Xs6")
                    }
                    @using (var row = Html.Bootstrap(this).GridRow().AddCss("demo-grid").Begin())
                    {
                        @row.GridColumn().SetXs(6).AddContent("Xs6")
                        @row.GridColumn().SetXs(6).AddContent("Xs6")
                    }
                </text>
            }
            using (panel.PanelTable().Begin())
            {
                @Html.Code(@"@using(var row = Html.Bootstrap().GridRow().Begin())
                    {
                        @row.GridColumn(8).SetXs(12).AddContent(""Md8 Xs12"")
                        @row.GridColumn(4).SetXs(6).AddContent(""Md4 Xs6"")
                    }
                    @using(var row = Html.Bootstrap().GridRow().Begin())
                    {
                        @row.GridColumn().SetMd(4).SetXs(6).AddContent(""Md4 Xs6"")
                        @row.GridColumn().SetMd(4).SetXs(6).AddContent(""Md4 Xs6"")
                        @row.GridColumn().SetMd(4).SetXs(6).AddContent(""Md4 Xs6"")
                    }
                    @using(var row = Html.Bootstrap().GridRow().Begin())
                    {
                        @row.GridColumn().SetXs(6).AddContent(""Xs6"")
                        @row.GridColumn().SetXs(6).AddContent(""Xs6"")
                    }")
            }
        }


        @Html.Bootstrap(this).Heading2("Column Offsets and Ordering")
    
        <p>You can also further customize the grid by using <code>.SetMdOffset()</code>, <code>.SetMdPush()</code>, and <code>.SetMdPull()</code> methods (or their corresponding <code>Xs</code>, <code>Sm</code>, and <code>Lg</code> counterparts, all of which can be used together).</p>
    
        using (var panel = Html.Bootstrap(this).Panel().Begin())
        {
            using (panel.PanelBody().Begin())
            {
                <text>
                    @using (var row = Html.Bootstrap(this).GridRow().AddCss("demo-grid").Begin())
                    {
                        @row.GridColumn(4).AddContent("Md4")
                        @row.GridColumn(4).SetMdOffset(4).AddContent("Md4 MdOffset4")
                    }
                    @using (var row = Html.Bootstrap(this).GridRow().AddCss("demo-grid").Begin())
                    {
                        @row.GridColumn(3).SetMdOffset(3).AddContent("Md3 MdOffset3")
                        @row.GridColumn(3).SetMdOffset(3).AddContent("Md3 MdOffset3")
                    }
                    @using (var row = Html.Bootstrap(this).GridRow().AddCss("demo-grid").Begin())
                    {
                        @row.GridColumn(6).SetMdOffset(3).AddContent("Md6 MdOffset3")
                    }
                    @using (var row = Html.Bootstrap(this).GridRow().AddCss("demo-grid").Begin())
                    {
                        @row.GridColumn(9).SetMdPush(3).AddContent("Md9 MdPush3")
                        @row.GridColumn(3).SetMdPull(9).AddContent("Md3 MdPull9")
                    }
                </text>
            }
            using (panel.PanelTable().Begin())
            {
                @Html.Code(@"@using(var row = Html.Bootstrap().GridRow().Begin())
                    {
                        @row.GridColumn(4).AddContent(""Md4"")
                        @row.GridColumn(4).SetMdOffset(4).AddContent(""Md4 MdOffset4"")
                    }
                    @using(var row = Html.Bootstrap().GridRow().Begin())
                    {
                        @row.GridColumn(3).SetMdOffset(3).AddContent(""Md3 MdOffset3"")
                        @row.GridColumn(3).SetMdOffset(3).AddContent(""Md3 MdOffset3"")
                    }
                    @using(var row = Html.Bootstrap().GridRow().Begin())
                    {
                        @row.GridColumn(6).SetMdOffset(3).AddContent(""Md6 MdOffset3"")
                    }
                    @using (var row = Html.Bootstrap().GridRow().Begin())
                    {
                        @row.GridColumn(9).SetMdPush(3).AddContent(""Md9 MdPush3"")
                        @row.GridColumn(3).SetMdPull(9).AddContent(""Md3 MdPull9"")
                    }")
            }
        }

        @**********************************@

        @Html.Bootstrap(this).PageHeader("Typography").SetId("typography")
    
        @Html.Bootstrap(this).Heading2("Headings")
    
        <p>Use <code>.PageHeader()</code> for large headings with an underline. Use <code>.Heading1()</code> through <code>.Heading6()</code> for different size headings. Each of these methods optionally accepts a string for the heading text (or you can use <code>.AddContent()</code> or use the heading as a disposable object). You can also use <code>.SetSmallText()</code> to add some secondary text to the heading.</p>

        using (var panel = Html.Bootstrap(this).Panel().Begin())
        {
            using (panel.PanelBody().Begin())
            {
                <text>
                    @Html.Bootstrap(this).PageHeader("Page Header")
                    @Html.Bootstrap(this).Heading1("Heading 1. Bootstrap Heading")
                    @Html.Bootstrap(this).Heading2("Heading 2. Bootstrap Heading").SetSmallText("Secondary text")
                    @Html.Bootstrap(this).Heading3("Heading 3. Bootstrap Heading")
                    @using (var heading = Html.Bootstrap(this).Heading4("Heading 4. Bootstrap Heading").Begin())
                    {
                        @heading.Small("Secondary text")
                    }
                    @Html.Bootstrap(this).Heading5("Heading 5. Bootstrap Heading")
                    @Html.Bootstrap(this).Heading6("Heading 6. Bootstrap Heading").WithChild().Small("Secondary text")
                </text>
            }
            using (panel.PanelTable().Begin())
            {
                @Html.Code(@"@Html.Bootstrap().PageHeader(""Page Header"")
                    @Html.Bootstrap().Heading1(""Heading 1. Bootstrap Heading"")
                    @Html.Bootstrap().Heading2(""Heading 2. Bootstrap Heading"").SetSmallText(""Secondary text"")
                    @Html.Bootstrap().Heading3(""Heading 3. Bootstrap Heading"")
                    @using(var heading = Html.Bootstrap().Heading4(""Heading 4. Bootstrap Heading"").Begin())
                    {
                        @heading.Small(""Secondary text"")
                    }
                    @Html.Bootstrap().Heading5(""Heading 5. Bootstrap Heading"")
                    @Html.Bootstrap().Heading6(""Heading 6. Bootstrap Heading"").WithChild().Small(""Secondary text"")")
            }
        }

        @Html.Bootstrap(this).Heading2("Leads")
    
        <p>You can make text stand out, or "lead", with the <code>.Lead()</code> method.</p>
    
        using (var panel = Html.Bootstrap(this).Panel().Begin())
        {
        using (panel.PanelBody().Begin())
        {
            <text>
                @Html.Bootstrap(this).Lead("Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor. Duis mollis, est non commodo luctus.")
                @using (Html.Bootstrap(this).Lead().Begin())
                {
                    <text>Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor. Duis mollis, est non commodo luctus.</text>
                }
            </text>
        }
        using (panel.PanelTable().Begin())
        {
            @Html.Code(@"@Html.Bootstrap().Lead(""Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor. Duis mollis, est non commodo luctus."")
                @using(Html.Bootstrap().Lead().Begin())
                {
                    <text>Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor. Duis mollis, est non commodo luctus.</text>
                }")
            }
        }
        
        @Html.Bootstrap(this).Heading2("Alignment")
    
        <p>You can use the <code>.SetAlignment()</code> method to specify text alignment for most other components.</p>

        using (var panel = Html.Bootstrap(this).Panel().Begin())
        {
            using (panel.PanelBody().Begin())
            {
                <text>
                    @Html.Bootstrap(this).Paragraph("Left aligned text.").SetAlignment(TextAlignment.Left)
                    @Html.Bootstrap(this).Paragraph("Center aligned text.").SetAlignment(TextAlignment.Center)
                    @Html.Bootstrap(this).Paragraph("Right aligned text.").SetAlignment(TextAlignment.Right)
                    @Html.Bootstrap(this).Paragraph("Justified text.").SetAlignment(TextAlignment.Justify)
                    @Html.Bootstrap(this).Paragraph("No wrap text.").SetAlignment(TextAlignment.Nowrap)
                </text>
            }
            using (panel.PanelTable().Begin())
            {
                @Html.Code(@"@Html.Bootstrap().Paragraph(""Left aligned text."").SetAlignment(TextAlignment.Left)
                    @Html.Bootstrap().Paragraph(""Center aligned text."").SetAlignment(TextAlignment.Center)
                    @Html.Bootstrap().Paragraph(""Right aligned text."").SetAlignment(TextAlignment.Right)
                    @Html.Bootstrap().Paragraph(""Justified text."").SetAlignment(TextAlignment.Justify)
                    @Html.Bootstrap().Paragraph(""No wrap text."").SetAlignment(TextAlignment.Nowrap)")
            }
        }

        @Html.Bootstrap(this).Heading2("Transformations")
    
        <p>You can use <code>.SetTransformation()</code> to apply text transformations to most other components.</p>

        using (var panel = Html.Bootstrap(this).Panel().Begin())
        {
            using (panel.PanelBody().Begin())
            {
                <text>
                    @Html.Bootstrap(this).Paragraph("Lowercased text.").SetTransformation(TextTransformation.Lowercase)
                    @Html.Bootstrap(this).Paragraph("Uppercased text.").SetTransformation(TextTransformation.Uppercase)
                    @Html.Bootstrap(this).Paragraph("Capitalized text.").SetTransformation(TextTransformation.Capitalize)
                </text>
            }
            using (panel.PanelTable().Begin())
            {
                @Html.Code(@"@Html.Bootstrap().Paragraph(""Lowercased text."").SetTransformation(TextTransformation.Lowercase)
                    @Html.Bootstrap().Paragraph(""Uppercased text."").SetTransformation(TextTransformation.Uppercase)
                    @Html.Bootstrap().Paragraph(""Capitalized text."").SetTransformation(TextTransformation.Capitalize)")
            }
        }

        @Html.Bootstrap(this).Heading2("Abbreviations")
    
        <p>Use <code>.Abbreviation()</code> to create abbreviations and acronyms. You can also use <code>.SetInitialism()</code> to give the abbreviation a slightly smaller font size.</p>

        using (var panel = Html.Bootstrap(this).Panel().Begin())
        {
            using (panel.PanelBody().Begin())
            {
                <text>
                    <p>An abbreviation of the word attribute is @Html.Bootstrap(this).Abbreviation("attribute", "attr").</p>
                    <p>@Html.Bootstrap(this).Abbreviation("HyperText Markup Language", "HTML").SetInitialism() is the best thing since sliced bread.</p>
                </text>
            }
            using (panel.PanelTable().Begin())
            {
                @Html.Code(@"<p>An abbreviation of the word attribute is @Html.Bootstrap().Abbreviation(""attribute"", ""attr"").</p>
                    <p>@Html.Bootstrap().Abbreviation(""HyperText Markup Language"", ""HTML"").SetInitialism() is the best thing since sliced bread.</p>")
            }
        }

        @Html.Bootstrap(this).Heading2("Addresses")
    
        <p>Wrap addresses with <code>.Address()</code>.</p>

        using (var panel = Html.Bootstrap(this).Panel().Begin())
        {
            using (panel.PanelBody().Begin())
            {
                <text>
                    @using(Html.Bootstrap(this).Address().Begin())
                    {
                        <text>
                            <strong>Twitter, Inc.</strong><br>
                            795 Folsom Ave, Suite 600<br>
                            San Francisco, CA 94107<br>
                            @Html.Bootstrap(this).Abbreviation("Phone", "P:") (123) 456-7890
                        </text>
                    }
                    @using (Html.Bootstrap(this).Address().Begin())
                    {
                        <strong>Full Name</strong><br>
                        @Html.Bootstrap(this).Link("first.last@example.com", "mailto:")
                    }
                </text>
            }
            using (panel.PanelTable().Begin())
            {
                @Html.Code(@"@using(Html.Bootstrap().Address().Begin())
                    {
                        <text>
                            <strong>Twitter, Inc.</strong><br>
                            795 Folsom Ave, Suite 600<br>
                            San Francisco, CA 94107<br>
                            @Html.Bootstrap().Abbreviation(""Phone"", ""P:"") (123) 456-7890
                        </text>
                    }
                    @using (Html.Bootstrap().Address().Begin())
                    {
                        <strong>Full Name</strong><br>
                        @Html.Bootstrap().Link(""first.last@example.com"", ""mailto:"")
                    }")
            }
        }
        
        @Html.Bootstrap(this).Heading2("Blockquotes")
    
        <p>Use <code>.Blockquote()</code> for creating blockquotes. You can also use <code>.SetReverse()</code> to make the content right-aligned.</p>

        using (var panel = Html.Bootstrap(this).Panel().Begin())
        {
            using (panel.PanelBody().Begin())
            {
                <text>
                    @Html.Bootstrap(this).Blockquote("Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.")
                    @Html.Bootstrap(this).Blockquote("Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.", "Someone famous in Source Title")
                    @Html.Bootstrap(this).Blockquote("Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.", "Someone famous in Source Title").SetReverse()
                    @using(Html.Bootstrap(this).Blockquote().Begin())
                    {
                        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.</p>
                        <footer>Someone famous in @Html.Bootstrap(this).Cite("Source Title", "Source Title")</footer>
                    }
                </text>
            }
            using (panel.PanelTable().Begin())
            {
                @Html.Code(@"@Html.Bootstrap(this).Blockquote(""Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante."")
                    @Html.Bootstrap(this).Blockquote(""Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante."", ""Someone famous in Source Title"")
                    @Html.Bootstrap(this).Blockquote(""Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante."", ""Someone famous in Source Title"").SetReverse()
                    @using(Html.Bootstrap(this).Blockquote().Begin())
                    {
                        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.</p>
                        <footer>Someone famous in @Html.Bootstrap(this).Cite(""Source Title"", ""Source Title"")</footer>
                    }")
            }
        }

        @**********************************@

        @Html.Bootstrap(this).PageHeader("Lists").SetId("lists")
    
        <p>Use <code>.List()</code> to create different styles of lists. This method takes an optional <code>ListType</code> enumeration that indicates the style of list to create. By default the list is unstyled if no <code>ListType</code> is supplied. You don't need to worry about <code>ul</code> vs. <code>ol</code> and which CSS styles to apply. Within the list use <code>.ListItem()</code> to create individual list items. This method takes an optional string that contains the content for the item. You can also nest lists just as you would in HTML.</p>

        @Html.Bootstrap(this).Heading2("Unordered")
    
        using (var panel = Html.Bootstrap(this).Panel().Begin())
        {
            using (panel.PanelBody().Begin())
            {
                <text>
                    @using(var list = Html.Bootstrap(this).List(ListType.Unordered).Begin())
                    {
                        @list.ListItem("Lorem ipsum dolor sit amet")
                        @list.ListItem("Consectetur adipiscing elit")
                        @list.ListItem("Integer molestie lorem at massa")
                        using (var innerList = Html.Bootstrap(this).List(ListType.Unordered).Begin())
                        {
                            @innerList.ListItem("Phasellus iaculis neque")
                            @innerList.ListItem("Vestibulum laoreet porttitor sem")
                        }
                        @list.ListItem("Aenean sit amet erat nunc")
                    }
                </text>
            }
            using (panel.PanelTable().Begin())
            {
                @Html.Code(@"@using(var list = Html.Bootstrap(this).List(ListType.Unordered).Begin())
                    {
                        @list.ListItem(""Lorem ipsum dolor sit amet"")
                        @list.ListItem(""Consectetur adipiscing elit"")
                        @list.ListItem(""Integer molestie lorem at massa"")
                        using (var innerList = Html.Bootstrap(this).List(ListType.Unordered).Begin())
                        {
                            @innerList.ListItem(""Phasellus iaculis neque"")
                            @innerList.ListItem(""Vestibulum laoreet porttitor sem"")
                        }
                        @list.ListItem(""Aenean sit amet erat nunc"")
                    }")
            }
        }

        @Html.Bootstrap(this).Heading2("Ordered")
    
        using (var panel = Html.Bootstrap(this).Panel().Begin())
        {
            using (panel.PanelBody().Begin())
            {
                <text>
                    @using (var list = Html.Bootstrap(this).List(ListType.Ordered).Begin())
                    {
                        @list.ListItem("Lorem ipsum dolor sit amet")
                        @list.ListItem("Consectetur adipiscing elit")
                        @list.ListItem("Integer molestie lorem at massa")
                        using (var innerList = Html.Bootstrap(this).List(ListType.Ordered).Begin())
                        {
                            @innerList.ListItem("Phasellus iaculis neque")
                            @innerList.ListItem("Vestibulum laoreet porttitor sem")
                        }
                        @list.ListItem("Aenean sit amet erat nunc")
                    }
                </text>
            }
            using (panel.PanelTable().Begin())
            {
                @Html.Code(@"@using(var list = Html.Bootstrap(this).List(ListType.Ordered).Begin())
                    {
                        @list.ListItem(""Lorem ipsum dolor sit amet"")
                        @list.ListItem(""Consectetur adipiscing elit"")
                        @list.ListItem(""Integer molestie lorem at massa"")
                        using (var innerList = Html.Bootstrap(this).List(ListType.Ordered).Begin())
                        {
                            @innerList.ListItem(""Phasellus iaculis neque"")
                            @innerList.ListItem(""Vestibulum laoreet porttitor sem"")
                        }
                        @list.ListItem(""Aenean sit amet erat nunc"")
                    }")
            }
        }

        @Html.Bootstrap(this).Heading2("Unstyled")
    
        using (var panel = Html.Bootstrap(this).Panel().Begin())
        {
            using (panel.PanelBody().Begin())
            {
                <text>
                    @using (var list = Html.Bootstrap(this).List(ListType.Unstyled).Begin())
                    {
                        @list.ListItem("Lorem ipsum dolor sit amet")
                        @list.ListItem("Consectetur adipiscing elit")
                        @list.ListItem("Integer molestie lorem at massa")
                        using (var innerList = Html.Bootstrap(this).List(ListType.Unordered).Begin())
                        {
                            @innerList.ListItem("Phasellus iaculis neque")
                            @innerList.ListItem("Vestibulum laoreet porttitor sem")
                        }
                        @list.ListItem("Aenean sit amet erat nunc")
                    }
                </text>
            }
            using (panel.PanelTable().Begin())
            {
                @Html.Code(@"@using(var list = Html.Bootstrap(this).List(ListType.Unstyled).Begin())
                    {
                        @list.ListItem(""Lorem ipsum dolor sit amet"")
                        @list.ListItem(""Consectetur adipiscing elit"")
                        @list.ListItem(""Integer molestie lorem at massa"")
                        using (var innerList = Html.Bootstrap(this).List(ListType.Unordered).Begin())
                        {
                            @innerList.ListItem(""Phasellus iaculis neque"")
                            @innerList.ListItem(""Vestibulum laoreet porttitor sem"")
                        }
                        @list.ListItem(""Aenean sit amet erat nunc"")
                    }")
            }
        }

        @Html.Bootstrap(this).Heading2("Inline")
    
        using (var panel = Html.Bootstrap(this).Panel().Begin())
        {
            using (panel.PanelBody().Begin())
            {
                <text>
                    @using (var list = Html.Bootstrap(this).List(ListType.Inline).Begin())
                    {
                        @list.ListItem("Lorem ipsum")
                        @list.ListItem("Phasellus iaculis")
                        @list.ListItem("Nulla volutpat")
                    }
                </text>
            }
            using (panel.PanelTable().Begin())
            {
                @Html.Code(@"@using(var list = Html.Bootstrap(this).List(ListType.Inline).Begin())
                    {
                        @list.ListItem(""Lorem ipsum dolor sit amet"")
                        @list.ListItem(""Phasellus iaculis"")
                        @list.ListItem(""Nulla volutpat"")
                    }")
            }
        }

        @Html.Bootstrap(this).Heading2("Descriptions")
    
        <p>To create a description list, use <code>.DescriptionList()</code>. Then alternate between terms and descriptions with <code>.DescriptionTerm()</code> and <code>.Description()</code>.</p>
    
        using (var panel = Html.Bootstrap(this).Panel().Begin())
        {
            using (panel.PanelBody().Begin())
            {
                <text>
                    @using(var list = Html.Bootstrap(this).DescriptionList().Begin())
                    {
                        @list.DescriptionTerm("Description lists")
                        @list.Description("A description list is perfect for defining terms.")
                        @list.DescriptionTerm("Euismod")
                        @list.Description("Vestibulum id ligula porta felis euismod semper eget lacinia odio sem nec elit. Donec id elit non mi porta gravida at eget metus.")
                        @list.DescriptionTerm("Malesuada porta")
                        @list.Description("Etiam porta sem malesuada magna mollis euismod.")
                    }
                </text>
            }
            using (panel.PanelTable().Begin())
            {
                @Html.Code(@"@using(var list = Html.Bootstrap(this).DescriptionList().Begin())
                    {
                        @list.DescriptionTerm(""Description lists"")
                        @list.Description(""A description list is perfect for defining terms."")
                        @list.DescriptionTerm(""Euismod"")
                        @list.Description(""Vestibulum id ligula porta felis euismod semper eget lacinia odio sem nec elit. Donec id elit non mi porta gravida at eget metus."")
                        @list.DescriptionTerm(""Malesuada porta"")
                        @list.Description(""Etiam porta sem malesuada magna mollis euismod."")
                    }")
            }
        }

        @Html.Bootstrap(this).Heading2("Horizontal Descriptions")
    
        <p>You can also make description lists horizontal by using <code>.SetHorizontal()</code>.</p>
    
        using (var panel = Html.Bootstrap(this).Panel().Begin())
        {
            using (panel.PanelBody().Begin())
            {
                <text>
                    @using (var list = Html.Bootstrap(this).DescriptionList().SetHorizontal().Begin())
                    {
                        @list.DescriptionTerm("Description lists")
                        @list.Description("A description list is perfect for defining terms.")
                        @list.DescriptionTerm("Euismod")
                        @list.Description("Vestibulum id ligula porta felis euismod semper eget lacinia odio sem nec elit. Donec id elit non mi porta gravida at eget metus.")
                        @list.DescriptionTerm("Malesuada porta")
                        @list.Description("Etiam porta sem malesuada magna mollis euismod.")
                    }
                </text>
            }
            using (panel.PanelTable().Begin())
            {
                @Html.Code(@"@using(var list = Html.Bootstrap(this).DescriptionList().SetHorizontal().Begin())
                    {
                        @list.DescriptionTerm(""Description lists"")
                        @list.Description(""A description list is perfect for defining terms."")
                        @list.DescriptionTerm(""Euismod"")
                        @list.Description(""Vestibulum id ligula porta felis euismod semper eget lacinia odio sem nec elit. Donec id elit non mi porta gravida at eget metus."")
                        @list.DescriptionTerm(""Malesuada porta"")
                        @list.Description(""Etiam porta sem malesuada magna mollis euismod."")
                    }")
            }
        }

        @Html.Bootstrap(this).Heading2("Model Binding")
    
        <p>If you are using ASP.NET MVC you can easily generate a list from a model using the <code>.ListFor()</code> method. In addition to the <code>ListType</code>, this method takes a function to get a sequence of items from the model and a function to get content from each item in the sequence.</p>

        using (var panel = Html.Bootstrap(this).Panel().Begin())
        {
            using (panel.PanelBody().Begin())
            {
                using (var list = Html.Bootstrap(this).List(ListType.Unordered).Begin())
                {
                    @list.ListItem("One")
                    @list.ListItem("Two")
                    @list.ListItem("Three")
                }
            }
            using (panel.PanelTable().Begin())
            {
                @Html.Code(@"/*
                    Using the following model:
                    {
                        PropA = ""A"",
                        PropB = 2,
                        PropC = new Dictionary<int, string>()
                        {
                            { 1, ""One""},
                            { 2, ""Two""},
                            { 3, ""Three""}
                        };
                    }
                    */

                    @Html.Bootstrap().ListFor(x => x.PropC, x => x.Value, ListType.Unordered)")
            }
        }

        @**********************************@
    
        @Html.Bootstrap(this).PageHeader("Tables").SetId("tables")
    
        <p>FluentBootstrap has many methods designed to make it easy to build tables with a minimum amount of code. Start a table with the <code>.Table()</code> method. Add rows to the table using <code>.TableRow()</code>, which is only needed if you want direct control (table rows will be automatically added when needed). Add cells using either <code>.TableHeader()</code> or <code>.TableData()</code>, both of which accept optional content. By default, <code>.TableHeader()</code> will create a <code>th</code> and automatically put it inside a <code>tr</code> in a <code>thead</code> section. Likewise, <code>.TableData()</code> will create a <code>td</code> inside a <code>tr</code> and <code>tbody</code> section. Alternativly, you can explicitly create table sections using <code>.TableHeadSection()</code>, <code>.TableBodySection()</code>, and <code>.TableFootSection()</code>. If you have an array of content or can specify it all at once you can further simplify your code by using <code>.TableHeaderRow()</code> and <code>.TableDataRow()</code> to create entire rows of cells at once.</p>
    
        using (var panel = Html.Bootstrap(this).Panel().Begin())
        {
            using (panel.PanelBody().Begin())
            {
                <text>
                    @using(var table = Html.Bootstrap(this).Table().Begin())
                    {
                        @table.TableHeaderRow("#", "First Name", "Last Name", "Username")
                        using(var row = table.TableRow().Begin())
                        {
                            @row.TableData("1")
                            @row.TableData("Mark")
                            @row.TableData("Otto")
                            @row.TableData("@mdo")
                        }
                        @table.TableDataRow("2", "Jacob", "Thornton", "@fat")
                    }            
                </text>
            }
            using (panel.PanelTable().Begin())
            {
                @Html.Code(@"@using(var table = Html.Bootstrap(this).Table().Begin())
                {
                    @table.TableHeaderRow(""#"", ""First Name"", ""Last Name"", ""Username"")
                    using(var row = table.TableRow().Begin())
                    {
                        @row.TableData(""1"")
                        @row.TableData(""Mark"")
                        @row.TableData(""Otto"")
                        @row.TableData(""@mdo"")
                    }
                    @table.TableDataRow(""2"", ""Jacob"", ""Thornton"", ""@fat"")
                }")
            }
        }

        @Html.Bootstrap(this).Heading2("Striped")
    
        <p>Use <code>.SetStyle()</code> to specify style options for the table.</p>

        using (var panel = Html.Bootstrap(this).Panel().Begin())
        {
            using (panel.PanelBody().Begin())
            {
                <text>
                    @using (var table = Html.Bootstrap(this).Table().SetStyle(TableStyle.Striped).Begin())
                    {
                        @table.TableHeaderRow("#", "First Name", "Last Name", "Username")
                        @table.TableDataRow("1", "Mark", "Otto", "@mdo")
                        @table.TableDataRow("2", "Jacob", "Thornton", "@fat")
                    }
                </text>
            }
            using (panel.PanelTable().Begin())
            {
                @Html.Code(@"@using(var table = Html.Bootstrap(this).Table().SetStyle(TableStyle.Striped).Begin())
                    {
                        @table.TableHeaderRow(""#"", ""First Name"", ""Last Name"", ""Username"")
                        @table.TableDataRow(""1"", ""Mark"", ""Otto"", ""@mdo"")
                        @table.TableDataRow(""2"", ""Jacob"", ""Thornton"", ""@fat"")
                    }")
            }
        }

        @Html.Bootstrap(this).Heading2("Bordered")

        using (var panel = Html.Bootstrap(this).Panel().Begin())
        {
            using (panel.PanelBody().Begin())
            {
                <text>
                    @using (var table = Html.Bootstrap(this).Table().SetStyle(TableStyle.Bordered).Begin())
                    {
                        @table.TableHeaderRow("#", "First Name", "Last Name", "Username")
                        using (table.TableDataRow().Begin())
                        {
                            @table.TableData("1").RowSpan(2)
                            @table.TableData("Mark")
                            @table.TableData("Otto")
                            @table.TableData("@mdo")
                        }
                        using (table.TableDataRow().Begin())
                        {
                            @table.TableData("Mark")
                            @table.TableData("Otto")
                            @table.TableData("@TwBootstrap")
                        }
                        @table.TableDataRow("2", "Jacob", "Thornton", "@fat")
                        using (table.TableDataRow().Begin())
                        {
                            @table.TableData("3")
                            @table.TableData("Larry The Bird").ColSpan(2)
                            @table.TableData("@twitter")
                        }
                    }
                </text>
            }
            using (panel.PanelTable().Begin())
            {
                @Html.Code(@"@using (var table = Html.Bootstrap(this).Table().SetStyle(TableStyle.Bordered).Begin())
                    {
                        @table.TableHeaderRow(""#"", ""First Name"", ""Last Name"", ""Username"")
                        using(table.TableDataRow().Begin())
                        {
                            @table.TableData(""1"").RowSpan(2)
                            @table.TableData(""Mark"")
                            @table.TableData(""Otto"")
                            @table.TableData(""@mdo"")
                        }
                        using(table.TableDataRow().Begin())
                        {
                            @table.TableData(""Mark"")
                            @table.TableData(""Otto"")
                            @table.TableData(""@TwBootstrap"")
                        }
                        @table.TableDataRow(""2"", ""Jacob"", ""Thornton"", ""@fat"")
                        using (table.TableDataRow().Begin())
                        {
                            @table.TableData(""3"")
                            @table.TableData(""Larry The Bird"").ColSpan(2)
                            @table.TableData(""@twitter"")
                        }
                    }")
            }
        }

        @Html.Bootstrap(this).Heading2("Hover")

        using (var panel = Html.Bootstrap(this).Panel().Begin())
        {
            using (panel.PanelBody().Begin())
            {
                <text>
                    @using (var table = Html.Bootstrap(this).Table().SetStyle(TableStyle.Hover).Begin())
                    {
                        @table.TableHeaderRow("#", "First Name", "Last Name", "Username")
                        @table.TableDataRow("1", "Mark", "Otto", "@mdo")
                        @table.TableDataRow("2", "Jacob", "Thornton", "@fat")
                        using (table.TableDataRow().Begin())
                        {
                            @table.TableData("3")
                            @table.TableData("Larry The Bird").ColSpan(2)
                            @table.TableData("@twitter")
                        }
                    }
                </text>
            }
            using (panel.PanelTable().Begin())
            {
                @Html.Code(@"@using (var table = Html.Bootstrap(this).Table().SetStyle(TableStyle.Hover).Begin())
                    {
                        @table.TableHeaderRow(""#"", ""First Name"", ""Last Name"", ""Username"")
                        @table.TableDataRow(""1"", ""Mark"", ""Otto"", ""@mdo"")
                        @table.TableDataRow(""2"", ""Jacob"", ""Thornton"", ""@fat"")
                        using (table.TableDataRow().Begin())
                        {
                            @table.TableData(""3"")
                            @table.TableData(""Larry The Bird"").ColSpan(2)
                            @table.TableData(""@twitter"")
                        }
                    }")
            }
        }
        
        @Html.Bootstrap(this).Heading2("Condensed")

        using (var panel = Html.Bootstrap(this).Panel().Begin())
        {
            using (panel.PanelBody().Begin())
            {
                <text>
                    @using (var table = Html.Bootstrap(this).Table().SetStyle(TableStyle.Condensed).Begin())
                    {
                        @table.TableHeaderRow("#", "First Name", "Last Name", "Username")
                        @table.TableDataRow("1", "Mark", "Otto", "@mdo")
                        @table.TableDataRow("2", "Jacob", "Thornton", "@fat")
                        using (table.TableDataRow().Begin())
                        {
                            @table.TableData("3")
                            @table.TableData("Larry The Bird").ColSpan(2)
                            @table.TableData("@twitter")
                        }
                    }
                </text>
            }
            using (panel.PanelTable().Begin())
            {
                @Html.Code(@"@using (var table = Html.Bootstrap(this).Table().SetStyle(TableStyle.Condensed).Begin())
                    {
                        @table.TableHeaderRow(""#"", ""First Name"", ""Last Name"", ""Username"")
                        @table.TableDataRow(""1"", ""Mark"", ""Otto"", ""@mdo"")
                        @table.TableDataRow(""2"", ""Jacob"", ""Thornton"", ""@fat"")
                        using (table.TableDataRow().Begin())
                        {
                            @table.TableData(""3"")
                            @table.TableData(""Larry The Bird"").ColSpan(2)
                            @table.TableData(""@twitter"")
                        }
                    }")
            }
        }
        
        @Html.Bootstrap(this).Heading2("Contextual States")
    
        <p>Use <code>.SetState()</code> on rows or cells to specify a state (which generally changes the color of the row or cell).</p>

        using (var panel = Html.Bootstrap(this).Panel().Begin())
        {
            using (panel.PanelBody().Begin())
            {
                <text>
                    @using (var table = Html.Bootstrap(this).Table().Begin())
                    {
                        @table.TableHeaderRow("#", "Heading", "Heading", "Heading")
                        @table.TableDataRow("1", "Content", "Content", "Content")
                        @table.TableDataRow("2", "Content", "Content", "Content").SetState(TableState.Active)
                        @table.TableDataRow("3", "Content", "Content", "Content").SetState(TableState.Success)
                        @table.TableDataRow("4", "Content", "Content", "Content").SetState(TableState.Info)
                        @table.TableDataRow("5", "Content", "Content", "Content").SetState(TableState.Warning)
                        @table.TableDataRow("6", "Content", "Content", "Content").SetState(TableState.Danger)
                        @table.TableDataRow("7", "Content", "Content", "Content").SetState(TableState.Default)
                        using (var row = table.TableDataRow().Begin())
                        {
                            @row.TableData("8")
                            @row.TableData("Content").SetState(TableState.Active)
                            @row.TableData("Content").SetState(TableState.Success)
                            @row.TableData("Content").SetState(TableState.Info)
                        }
                        using (var row = table.TableDataRow().Begin())
                        {
                            @row.TableData("9")
                            @row.TableData("Content").SetState(TableState.Warning)
                            @row.TableData("Content").SetState(TableState.Danger)
                            @row.TableData("Content").SetState(TableState.Default)
                        }
                    }
                </text>
            }
            using (panel.PanelTable().Begin())
            {
                @Html.Code(@"@using (var table = Html.Bootstrap(this).Table().Begin())
                    {
                        @table.TableHeaderRow(""#"", ""Heading"", ""Heading"", ""Heading"")
                        @table.TableDataRow(""1"", ""Content"", ""Content"", ""Content"")
                        @table.TableDataRow(""2"", ""Content"", ""Content"", ""Content"").SetState(TableState.Active)
                        @table.TableDataRow(""3"", ""Content"", ""Content"", ""Content"").SetState(TableState.Success)
                        @table.TableDataRow(""4"", ""Content"", ""Content"", ""Content"").SetState(TableState.Info)
                        @table.TableDataRow(""5"", ""Content"", ""Content"", ""Content"").SetState(TableState.Warning)
                        @table.TableDataRow(""6"", ""Content"", ""Content"", ""Content"").SetState(TableState.Danger)
                        @table.TableDataRow(""7"", ""Content"", ""Content"", ""Content"").SetState(TableState.Default)
                        using(var row = table.TableDataRow().Begin())
                        {
                            @row.TableData(""8"")
                            @row.TableData(""Content"").SetState(TableState.Active)
                            @row.TableData(""Content"").SetState(TableState.Success)
                            @row.TableData(""Content"").SetState(TableState.Info)
                        }
                        using (var row = table.TableDataRow().Begin())
                        {
                            @row.TableData(""9"")
                            @row.TableData(""Content"").SetState(TableState.Warning)
                            @row.TableData(""Content"").SetState(TableState.Danger)
                            @row.TableData(""Content"").SetState(TableState.Default)
                        }
                    }")
            }
        }

        @Html.Bootstrap(this).Heading2("Responsive Tables")
    
        <p>Use <code>.SetResponsive()</code> to indicate that the table should scroll horizontally on small devices (you don't need to worry about a wrapping element as in Bootstrap).</p>

        using (var panel = Html.Bootstrap(this).Panel().Begin())
        {
            using (panel.PanelBody().Begin())
            {
                <text>
                    @using (var table = Html.Bootstrap(this).Table().SetStyle(TableStyle.Bordered | TableStyle.Striped).SetResponsive().Begin())
                    {
                        @table.TableHeaderRow("#", "Heading", "Heading", "Heading", "Heading", "Heading", "Heading")
                        @table.TableDataRow("1", "Content", "Content", "Content", "Content", "Content", "Content")
                        @table.TableDataRow("2", "Content", "Content", "Content", "Content", "Content", "Content")
                        @table.TableDataRow("3", "Content", "Content", "Content", "Content", "Content", "Content")
                    }
                </text>
            }
            using (panel.PanelTable().Begin())
            {
                @Html.Code(@"@using (var table = Html.Bootstrap(this).Table().SetStyle(TableStyle.Bordered | TableStyle.Striped).SetResponsive().Begin())
                    {
                        @table.TableHeaderRow(""#"", ""Heading"", ""Heading"", ""Heading"", ""Heading"", ""Heading"", ""Heading"")
                        @table.TableDataRow(""1"", ""Content"", ""Content"", ""Content"", ""Content"", ""Content"", ""Content"")
                        @table.TableDataRow(""2"", ""Content"", ""Content"", ""Content"", ""Content"", ""Content"", ""Content"")
                        @table.TableDataRow(""3"", ""Content"", ""Content"", ""Content"", ""Content"", ""Content"", ""Content"")
                    }")
            }
        }


        @**********************************@
    
        @*
        @Html.Bootstrap(this).Heading2("")

        @using (var panel = Html.Bootstrap(this).Panel().Begin())
        {
            using (panel.PanelBody().Begin())
            {
                <text>
                </text>
            }
            using (panel.PanelTable().Begin())
            {
                @Html.Code()
            }
        }
        *@

        <br />
        <br />
        <hr />
    
        @Html.Bootstrap(this).Alert(AlertState.Warning, "Note that this page focuses on the most common use cases and does not document the full feature set of FluentBootstrap. Generally anything that you can do in Bootstrap can be done in FluentBootstrap. Additional documentation and examples will continue to be added as time allows.")
    }
    using (outerRow.GridColumn(3).SetVisibility(Visibility.HiddenSm | Visibility.HiddenXs).Begin())
    {
        <div id="sidebar">
            @using (var pills = Html.Bootstrap(this).Pills().SetStacked().Begin())
            {
                @pills.Pill("Grids", "#grids")
                @pills.Pill("Typography", "#typography")
                @pills.Pill("Lists", "#lists")
                @pills.Pill("Tables", "#tables")
            }
        </div>
    }
}

<script type="text/javascript">
    var $window = $(window);
    var $body = $(document.body);

    $body.scrollspy({ target: '#sidebar' });

    $window.on('load', function () {
        $body.scrollspy('refresh');

        var $sidebar = $('#sidebar');

        $sidebar.affix({
            offset: {
                top: $sidebar.offset().top - 20
            }
        });

        $sidebar.width($sidebar.parent().width());
    });
</script>

